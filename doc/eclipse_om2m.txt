


-------------------------------------  Eclipse OM2M  -------------------------------------


OM2M provides an open source service platform for M2M interoperability based on the oneM2M standard. OM2M follows a RESTful approach with open interfaces to enable developing services and applications independently of the underlying network. It proposes a modular architecture running on top of an OSGi layer, making it highly extensible via plugins. It supports multiple protocol bindings such as HTTP and CoAP. Various interworking proxies are provided to enable seamless communication with vendor-specific technologies such as Zigbee and Phidgets devices.



******** Introduction ********

OM2M provides a RESTful API for creating and managing M2M resources. It includes several primitive procedures to enable machines authentication, resources discovery, applications registration, containers management, synchronous and asynchronous communications, access rights authorization, groups organisation, re-targeting, etc.

This API operates on the following primary resource types:

- CseBase: describes the hosting CSE, and is the root for all other resources within the hosting CSE.

- remoteCse: stores information related to M2M CSEs residing on other M2M machines after successful mutual authentication. It enables Cses interactions using retargeting operations

- AE: stores information about the Application Entity after a successful registration on the hosting CSE.

- Container: acts as a mediator for data buffering to enable data exchange between applications and CSEs

- AccessControlPolicies: manages permissions and permissions holders to limit and protect the access to the resource tree structure.

- Group: enhances resources tree operations and simplifying the interactions on the API interfaces by adding the grouping feature. It enables an issuer to send one request to a set of receivers instead of sending requests one by one.

- Subscription: stores information related to subscriptions for some resources. It allow subscribers to receive asynchronous notification when an event happens such as the reception of new sensor event or the creation, update, or delete of a resource.



******** Prerequisites ********

- Git is required to clone OM2M.

- "JAVA 1.7" at minimum is required to run OM2M.

- "Apache Maven 3" is required to build OM2M.


----> piOM2M: 
  
Apache Maven 3.0.5
  Maven home: /usr/share/maven
  Java version: 1.8.0_65, vendor: Oracle Corporation
  Java home: /usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre
  Default locale: en_US, platform encoding: UTF-8
  OS name: "linux", version: "4.9.35-v7+", arch: "arm", family: "unix"



******** Clone OM2M using command line ********

- Clone the OM2M project using git with the following command:
    git clone https://git.eclipse.org/r/om2m/org.eclipse.om2m



******** Build OM2M using command line ********

- Go to "org.eclipse.om2m" directory.

- Build OM2M using the following command: (An internet connection is required to download required dependencies)
    mvn clean install

- Two Eclipse products will be generated after a successful built:
  * The IN product can be found on this directory: "om2m/org.eclipse.om2m/org.eclipse.om2m.site.in-cse/target/products/in-cse/<os>/<ws>/<arch>"
  * The MN product can be found on this directory: "om2m/org.eclipse.om2m/org.eclipse.om2m.site.mn-cse/target/products/mn-cse/<os>/<ws>/<arch>"
  * The ASN product can be found on this directory: "om2m/org.eclipse.om2m/org.eclipse.om2m.site.asn-cse/target/products/asn-cse/<os>/<ws>/<arch>"

piOM2M output:

[INFO] Executed tasks
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] org.eclipse.om2m :: parent ........................ SUCCESS [2.634s]
[INFO] org.eclipse.om2m :: commons ....................... SUCCESS [12.994s]
[INFO] org.eclipse.om2m :: logging fragment .............. SUCCESS [0.206s]
[INFO] org.eclipse.om2m :: binding service ............... SUCCESS [0.397s]
[INFO] org.eclipse.om2m :: core service .................. SUCCESS [0.320s]
[INFO] org.eclipse.om2m :: binding http .................. SUCCESS [0.783s]
[INFO] org.eclipse.om2m :: binding coap .................. SUCCESS [0.625s]
[INFO] org.eclipse.om2m :: data mapping service .......... SUCCESS [0.338s]
[INFO] org.eclipse.om2m.binding.mqtt ..................... SUCCESS [0.768s]
[INFO] org.eclipse.om2m :: persistence service ........... SUCCESS [0.367s]
[INFO] org.eclipse.om2m :: persistence eclipselink ....... SUCCESS [4.901s]
[INFO] org.eclipse.om2m :: datamapper jaxb ............... SUCCESS [0.498s]
[INFO] org.eclipse.om2m :: webapp resourcesbrowser xml ... SUCCESS [0.516s]
[INFO] org.eclipse.om2m :: webapp resourcesbrowser json .. SUCCESS [0.515s]
[INFO] org.eclipse.om2m :: interworking service .......... SUCCESS [0.359s]
[INFO] org.eclipse.om2m :: core .......................... SUCCESS [1.339s]
[INFO] org.eclipse.om2m :: ipe sample .................... SUCCESS [0.706s]
[INFO] org.eclipse.om2m :: asn product ................... SUCCESS [25.578s]
[INFO] org.eclipse.om2m :: in product .................... SUCCESS [23.702s]
[INFO] org.eclipse.om2m :: mn product .................... SUCCESS [15.488s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6:16.724s
[INFO] Finished at: Wed Jul 26 17:17:13 CEST 2017
[INFO] Final Memory: 100M/224M
[INFO] ------------------------------------------------------------------------




******** Test OM2M ********

- Go to the IN-CSE product directory: "om2m/org.eclipse.om2m/org.eclipse.om2m.site.in-cse/target/products/in-cse/<os>/<ws>/<arch>".

- Start the IN-CSE by executing the "start.bat" script on Windows or "start.sh" on Linux and Mac OS.
    WARNING for Windows users: don't double click on the "start.bat" file from Eclipse explorer on Windows. This cause unwanted loading of bundles and the platform will NOT be launched. Use the File Explorer instead.

- Once the IN-CSE is started, you will see an OSGi console. You can type “ss” to report a summary status of all installed bundles. Type "exit" to shutdown.

- Open your browser and connect to the address "http://127.0.0.1:8080/webpage" to access the IN-CSE web interface.
  Enter username "admin" and password "admin" then click on login button to display the IN-CSE resource tree.

- After a successful authentication, the in-cse resource will be displayed. You can see the "in-cse" CseBase sub-resources and attributes.

- Congratulation!! You built and started OM2M successfully.
